data1mc=cbind(y1mc,xmc,emc,gsmc)
# case & control
ind1mc=which(y1mc==0)
snp.controlmc=data1mc[ind1mc[1:n.control],]
ind21mc=which(y1mc==1)
snp.casemc=data1mc[ind21mc[1:n.case],]
snpsimmc=rbind(snp.controlmc,snp.casemc)
data_ymc=snpsimmc[,1]
data_xmc=snpsimmc[,2:4]
data_xmc=as.data.frame(data_xmc)
if(length(which(data_xmc[,3]==1))>1){
# dummy variable
zmc=matrix(0,nrow=n.case+n.control,ncol=2)
zmc[which(data_xmc[,3]==0.5),2]=1
zmc[which(data_xmc[,3]==1),1]=1
data_xnewmc=cbind(data_xmc[,1],data_xmc[,2],zmc,zmc[,1]*data_xmc[,2],zmc[,2]*data_xmc[,2])
data_xnewmc=as.data.frame(data_xnewmc)
data_xnew2mc=cbind(data_xmc[,1],data_xmc[,2],data_xmc[,3],data_xmc[,3]*data_xmc[,2])
data_xnew2mc=as.data.frame(data_xnew2mc)
covamc=data_xnewmc[,1]
eexmc=data_xnewmc[,2]
dummc1=data_xnewmc[,3]
dummc2=data_xnewmc[,4]
dummc1e=data_xnewmc[,5]
dummc2e=data_xnewmc[,6]
# obtain MLE
##################### test interaction term#######################################
#     glm.simmc=glm(data_ymc~data_xnew2mc[,1]+data_xnew2mc[,2]+data_xnew2mc[,3],data=data_xnew2mc,family="binomial")
#     glm.simmc=glm(data_ymc~data_xnewmc[,1]+data_xnewmc[,2]+data_xnewmc[,3]+data_xnewmc[,4],data=data_xnewmc,family="binomial")
#     beta_0estmc=summary(glm.simmc)$coefficients[1,1]
#     beta_1estmc=summary(glm.simmc)$coefficients[2,1]
#     beta_2estmc=summary(glm.simmc)$coefficients[3,1]
#     beta_3estmc=summary(glm.simmc)$coefficients[4,1]
#
#
#
#     smaxmctem=c()
#
#     for(kk in 1:length(theta)){
#       # Score function
#
#       scormc=sum(data_ymc*(dummc1e+theta[kk]*dummc2e)-exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(dummc1e+theta[kk]*dummc2e)/(1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)))
#
#       # Informatic metric
#
#       I11mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I22mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(covamc^2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I33mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(eexmc^2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I44mc=sum(((dummc1+theta[kk]*dummc2)^2)*exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I55mc=sum(((dummc1e+theta[kk]*dummc2e)^2)*exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I12mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*covamc/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I13mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*eexmc/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I14mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I15mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I23mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*covamc*eexmc/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I24mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*covamc*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I25mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*covamc*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I34mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*eexmc*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I35mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*eexmc*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#       I45mc=sum(exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2)*(dummc1+theta[kk]*dummc2)*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc+beta_2estmc*eexmc+beta_3estmc*dummc1+theta[kk]*beta_3estmc*dummc2))^2))
#
#       fmmc=matrix(NA,nrow=5,ncol=5)
#       fmmc[1,1]=I11mc
#       fmmc[2,2]=I22mc
#       fmmc[3,3]=I33mc
#       fmmc[4,4]=I44mc
#       fmmc[5,5]=I55mc
#       fmmc[1,2]=I12mc
#       fmmc[1,3]=I13mc
#       fmmc[1,4]=I14mc
#       fmmc[1,5]=I15mc
#       fmmc[2,3]=I23mc
#       fmmc[2,4]=I24mc
#       fmmc[2,5]=I25mc
#       fmmc[3,4]=I34mc
#       fmmc[3,5]=I35mc
#       fmmc[4,5]=I45mc
#
#       for(i in 1:5){
#         for(j in 1:5){
#           fmmc[j,i]=fmmc[i,j]
#         }
#       }
#       fminvmc=solve(fmmc)
#
#       smaxmctem[kk]=(scormc^2)*fminvmc[5,5]
#
#     }
#     # MAX statistic
#
#     smaxmc[bb]=max(smaxmctem)
#
#   }
#
# }
#
# if(length(which(is.na(smaxmc)))==0){
#
#   smaxmc_sort=sort(smaxmc[1:B])
#
# }else{
#
#   hu=smaxmc[-which(is.na(smaxmc))]
#   smaxmc_sort=sort(hu[1:B])
# }
#
# scv=smaxmc_sort[B-B*alpha+1]
###################################### test global term ##############################################
glm.simmc=glm(data_ymc~data_xnew2mc[,1],data=data_xnew2mc,family="binomial")
beta_0estmc=summary(glm.simmc)$coefficients[1,1]
beta_1estmc=summary(glm.simmc)$coefficients[2,1]
smaxmctem=c()
for(kk in 1:length(theta)){
# Score function
scormc=matrix(NA,nrow=3,ncol=1)
scormc[1,1]=sum(data_ymc*eexmc-exp(beta_0estmc+beta_1estmc*covamc)*eexmc/(1+exp(beta_0estmc+beta_1estmc*covamc)))
scormc[2,1]=sum(data_ymc*(dummc1+theta[kk]*dummc2)-exp(beta_0estmc+beta_1estmc*covamc)*(dummc1+theta[kk]*dummc2)/(1+exp(beta_0estmc+beta_1estmc*covamc)))
scormc[3,1]=sum(data_ymc*(dummc1e+theta[kk]*dummc2e)-exp(beta_0estmc+beta_1estmc*covamc)*(dummc1e+theta[kk]*dummc2e)/(1+exp(beta_0estmc+beta_1estmc*covamc)))
# Informatic metric
I11mc=sum(exp(beta_0estmc+beta_1estmc*covamc)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I22mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*(covamc^2)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I33mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*(eexmc^2)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I44mc=sum(((dummc1+theta[kk]*dummc2)^2)*exp(beta_0estmc+beta_1estmc*covamc)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I55mc=sum(((dummc1e+theta[kk]*dummc2e)^2)*exp(beta_0estmc+beta_1estmc*covamc)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I12mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*covamc/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I13mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*eexmc/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I14mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I15mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I23mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*covamc*eexmc/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I24mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*covamc*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I25mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*covamc*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I34mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*eexmc*(dummc1+theta[kk]*dummc2)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I35mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*eexmc*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
I45mc=sum(exp(beta_0estmc+beta_1estmc*covamc)*(dummc1+theta[kk]*dummc2)*(dummc1e+theta[kk]*dummc2e)/((1+exp(beta_0estmc+beta_1estmc*covamc))^2))
fmmc=matrix(NA,nrow=5,ncol=5)
fmmc[1,1]=I11mc
fmmc[2,2]=I22mc
fmmc[3,3]=I33mc
fmmc[4,4]=I44mc
fmmc[5,5]=I55mc
fmmc[1,2]=I12mc
fmmc[1,3]=I13mc
fmmc[1,4]=I14mc
fmmc[1,5]=I15mc
fmmc[2,3]=I23mc
fmmc[2,4]=I24mc
fmmc[2,5]=I25mc
fmmc[3,4]=I34mc
fmmc[3,5]=I35mc
fmmc[4,5]=I45mc
for(i in 1:5){
for(j in 1:5){
fmmc[j,i]=fmmc[i,j]
}
}
fminvmc=solve(fmmc)
smaxmctem[kk]=t(scormc)%*%fminvmc[3:5,3:5]%*%scormc
}
# MAX statistic
smaxmc[bb]=max(smaxmctem)
}
}
if(length(which(is.na(smaxmc)))==0){
smaxmc_sort=sort(smaxmc[1:B])
}else{
hu=smaxmc[-which(is.na(smaxmc))]
smaxmc_sort=sort(hu[1:B])
}
scv=smaxmc_sort[B-B*alpha+1]
########################## power comparison##########################################
smax=c()
sc=c()
for(bbb in 1:itertem){
# covariate
# continous
x=runif(cov.num,0,1)
# discrete
# x=rbinom(cov.num,1,0.5)
# environment
e=rbinom(num,1,pr_e)
# genotype data
# gs=sample(c(0,0.5,1),num,replace=T,prob=c((1-maf)^2,2*maf*(1-maf),maf^2))
gs=sample(c(0,0.5,1),num,replace=T,prob=c((1-maf[hh])^2,2*maf[hh]*(1-maf[hh]),maf[hh]^2))
g1=gs
g1[which(gs==0.5)]=1
pr1=exp(beta_0+beta_1*x+beta_2*e+beta_3*g1+beta_4*g1*e)/(1+exp(beta_0+beta_1*x+beta_2*e+beta_3*g1+beta_4*g1*e))
y1=rep(NA,num)
for(ii21 in 1:num){
y1[ii21]=rbinom(1,1,pr1[ii21])
}
data1=cbind(y1,x,e,gs)
# case & control
ind1=which(y1==0)
snp.control=data1[ind1[1:n.control],]
ind21=which(y1==1)
snp.case=data1[ind21[1:n.case],]
snpsim=rbind(snp.control,snp.case)
data_y=snpsim[,1]
data_x=snpsim[,2:4]
data_x=as.data.frame(data_x)
if(length(which(data_x[,3]==1))>1){
# dummy variable
z=matrix(0,nrow=n.case+n.control,ncol=2)
z[which(data_x[,3]==0.5),2]=1
z[which(data_x[,3]==1),1]=1
data_xnew=cbind(data_x[,1],data_x[,2],z,z[,1]*data_x[,2],z[,2]*data_x[,2])
data_xnew=as.data.frame(data_xnew)
data_xnew2=cbind(data_x[,1],data_x[,2],data_x[,3],data_x[,3]*data_x[,2])
data_xnew2=as.data.frame(data_xnew2)
cova=data_xnew[,1]
eex=data_xnew[,2]
dum1=data_xnew[,3]
dum2=data_xnew[,4]
dum1e=data_xnew[,5]
dum2e=data_xnew[,6]
# obtain MLE
################################ test interaction term ##########################################
#    glm.sim=glm(data_y~data_xnew2[,1]+data_xnew2[,2]+data_xnew2[,3],data=data_xnew2,family="binomial")
#    glm.sim=glm(data_y~data_xnew[,1]+data_xnew[,2]+data_xnew[,3]+data_xnew[,4],data=data_xnew,family="binomial")
#    beta_0est=summary(glm.sim)$coefficients[1,1]
#    beta_1est=summary(glm.sim)$coefficients[2,1]
#    beta_2est=summary(glm.sim)$coefficients[3,1]
#    beta_3est=summary(glm.sim)$coefficients[4,1]
#
#    smaxtem=c()
#
#    for(kk in 1:length(theta)){
#      # Score function
#
#      scor=sum(data_y*(dum1e+theta[kk]*dum2e)-exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(dum1e+theta[kk]*dum2e)/(1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)))
#
#      # Informatic metric
#
#      I11=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I22=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(cova^2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I33=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(eex^2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I44=sum(((dum1+theta[kk]*dum2)^2)*exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I55=sum(((dum1e+theta[kk]*dum2e)^2)*exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I12=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*cova/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I13=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*eex/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I14=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I15=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I23=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*cova*eex/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I24=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*cova*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I25=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*cova*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I34=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*eex*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I35=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*eex*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#      I45=sum(exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2)*(dum1+theta[kk]*dum2)*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova+beta_2est*eex+beta_3est*dum1+theta[kk]*beta_3est*dum2))^2))
#
#      fm=matrix(NA,nrow=5,ncol=5)
#      fm[1,1]=I11
#      fm[2,2]=I22
#      fm[3,3]=I33
#      fm[4,4]=I44
#      fm[5,5]=I55
#      fm[1,2]=I12
#      fm[1,3]=I13
#      fm[1,4]=I14
#      fm[1,5]=I15
#      fm[2,3]=I23
#      fm[2,4]=I24
#      fm[2,5]=I25
#      fm[3,4]=I34
#      fm[3,5]=I35
#      fm[4,5]=I45
#
#      for(i in 1:5){
#        for(j in 1:5){
#          fm[j,i]=fm[i,j]
#        }
#      }
#      fminv=solve(fm)
#
#      smaxtem[kk]=(scor^2)*fminv[5,5]
#
#    }
#    # MAX statistic
#
#    smax[bbb]=max(smaxtem)
#
#
# # tradition
#
#    # score function
#
#    score_tra=sum(data_y*data_x[,2]*data_x[,3]-(exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])*data_x[,2]*data_x[,3]/(1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))))
#
#    # Fisher infor
#
#    I11_tra=sum(exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I22_tra=sum((data_x[,1]^2)*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I33_tra=sum((data_x[,2]^2)*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I44_tra=sum((data_x[,3]^2)*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I55_tra=sum(((data_x[,2]*data_x[,3])^2)*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I12_tra=sum(data_x[,1]*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I13_tra=sum(data_x[,2]*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I14_tra=sum(data_x[,3]*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I15_tra=sum((data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I23_tra=sum((data_x[,1]*data_x[,2])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I24_tra=sum((data_x[,1]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I25_tra=sum((data_x[,1]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I34_tra=sum((data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I35_tra=sum((data_x[,2]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#    I45_tra=sum((data_x[,3]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3])/((1+exp(beta_0est+beta_1est*data_x[,1]+beta_2est*data_x[,2]+beta_3est*data_x[,3]))^2))
#
#    fm_tra=matrix(NA,nrow=5,ncol=5)
#    fm_tra[1,1]=I11_tra
#    fm_tra[2,2]=I22_tra
#    fm_tra[3,3]=I33_tra
#    fm_tra[4,4]=I44_tra
#    fm_tra[5,5]=I55_tra
#    fm_tra[1,2]=I12_tra
#    fm_tra[1,3]=I13_tra
#    fm_tra[1,4]=I14_tra
#    fm_tra[1,5]=I15_tra
#    fm_tra[2,3]=I23_tra
#    fm_tra[2,4]=I24_tra
#    fm_tra[2,5]=I25_tra
#    fm_tra[3,4]=I34_tra
#    fm_tra[3,5]=I35_tra
#    fm_tra[4,5]=I45_tra
#    for(i in 1:5){
#      for(j in 1:5){
#        fm_tra[j,i]=fm_tra[i,j]
#      }
#    }
#
#    fminv_tra=solve(fm_tra)
#    sc[bbb]=(score_tra^2)*fminv_tra[5,5]
################################# test global term ################################################
glm.sim=glm(data_y~data_xnew2[,1],data=data_xnew2,family="binomial")
beta_0est=summary(glm.sim)$coefficients[1,1]
beta_1est=summary(glm.sim)$coefficients[2,1]
smaxtem=c()
for(kk in 1:length(theta)){
# Score function
scor=matrix(NA,nrow=3,ncol=1)
scor[1,1]=sum(data_y*eex-exp(beta_0est+beta_1est*cova)*eex/(1+exp(beta_0est+beta_1est*cova)))
scor[2,1]=sum(data_y*(dum1+theta[kk]*dum2)-exp(beta_0est+beta_1est*cova)*(dum1+theta[kk]*dum2)/(1+exp(beta_0est+beta_1est*cova)))
scor[3,1]=sum(data_y*(dum1e+theta[kk]*dum2e)-exp(beta_0est+beta_1est*cova)*(dum1e+theta[kk]*dum2e)/(1+exp(beta_0est+beta_1est*cova)))
# Informatic metric
I11=sum(exp(beta_0est+beta_1est*cova)/((1+exp(beta_0est+beta_1est*cova))^2))
I22=sum(exp(beta_0est+beta_1est*cova)*(cova^2)/((1+exp(beta_0est+beta_1est*cova))^2))
I33=sum(exp(beta_0est+beta_1est*cova)*(eex^2)/((1+exp(beta_0est+beta_1est*cova))^2))
I44=sum(((dum1+theta[kk]*dum2)^2)*exp(beta_0est+beta_1est*cova)/((1+exp(beta_0est+beta_1est*cova))^2))
I55=sum(((dum1e+theta[kk]*dum2e)^2)*exp(beta_0est+beta_1est*cova)/((1+exp(beta_0est+beta_1est*cova))^2))
I12=sum(exp(beta_0est+beta_1est*cova)*cova/((1+exp(beta_0est+beta_1est*cova))^2))
I13=sum(exp(beta_0est+beta_1est*cova)*eex/((1+exp(beta_0est+beta_1est*cova))^2))
I14=sum(exp(beta_0est+beta_1est*cova)*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova))^2))
I15=sum(exp(beta_0est+beta_1est*cova)*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova))^2))
I23=sum(exp(beta_0est+beta_1est*cova)*cova*eex/((1+exp(beta_0est+beta_1est*cova))^2))
I24=sum(exp(beta_0est+beta_1est*cova)*cova*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova))^2))
I25=sum(exp(beta_0est+beta_1est*cova)*cova*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova))^2))
I34=sum(exp(beta_0est+beta_1est*cova)*eex*(dum1+theta[kk]*dum2)/((1+exp(beta_0est+beta_1est*cova))^2))
I35=sum(exp(beta_0est+beta_1est*cova)*eex*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova))^2))
I45=sum(exp(beta_0est+beta_1est*cova)*(dum1+theta[kk]*dum2)*(dum1e+theta[kk]*dum2e)/((1+exp(beta_0est+beta_1est*cova))^2))
fm=matrix(NA,nrow=5,ncol=5)
fm[1,1]=I11
fm[2,2]=I22
fm[3,3]=I33
fm[4,4]=I44
fm[5,5]=I55
fm[1,2]=I12
fm[1,3]=I13
fm[1,4]=I14
fm[1,5]=I15
fm[2,3]=I23
fm[2,4]=I24
fm[2,5]=I25
fm[3,4]=I34
fm[3,5]=I35
fm[4,5]=I45
for(i in 1:5){
for(j in 1:5){
fm[j,i]=fm[i,j]
}
}
fminv=solve(fm)
smaxtem[kk]=t(scor)%*%fminv[3:5,3:5]%*%scor
}
# MAX statistic
smax[bbb]=max(smaxtem)
# tradition
# score function
score_tra=matrix(NA,nrow=3,ncol=1)
score_tra[1,1]=sum(data_y*data_x[,2]-(exp(beta_0est+beta_1est*data_x[,1])*data_x[,2]/(1+exp(beta_0est+beta_1est*data_x[,1]))))
score_tra[2,1]=sum(data_y*data_x[,3]-(exp(beta_0est+beta_1est*data_x[,1])*data_x[,3]/(1+exp(beta_0est+beta_1est*data_x[,1]))))
score_tra[3,1]=sum(data_y*data_x[,2]*data_x[,3]-(exp(beta_0est+beta_1est*data_x[,1])*data_x[,2]*data_x[,3]/(1+exp(beta_0est+beta_1est*data_x[,1]))))
# Fisher infor
I11_tra=sum(exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I22_tra=sum((data_x[,1]^2)*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I33_tra=sum((data_x[,2]^2)*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I44_tra=sum((data_x[,3]^2)*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I55_tra=sum(((data_x[,2]*data_x[,3])^2)*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I12_tra=sum(data_x[,1]*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I13_tra=sum(data_x[,2]*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I14_tra=sum(data_x[,3]*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I15_tra=sum((data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I23_tra=sum((data_x[,1]*data_x[,2])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I24_tra=sum((data_x[,1]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I25_tra=sum((data_x[,1]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I34_tra=sum((data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I35_tra=sum((data_x[,2]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
I45_tra=sum((data_x[,3]*data_x[,2]*data_x[,3])*exp(beta_0est+beta_1est*data_x[,1])/((1+exp(beta_0est+beta_1est*data_x[,1]))^2))
fm_tra=matrix(NA,nrow=5,ncol=5)
fm_tra[1,1]=I11_tra
fm_tra[2,2]=I22_tra
fm_tra[3,3]=I33_tra
fm_tra[4,4]=I44_tra
fm_tra[5,5]=I55_tra
fm_tra[1,2]=I12_tra
fm_tra[1,3]=I13_tra
fm_tra[1,4]=I14_tra
fm_tra[1,5]=I15_tra
fm_tra[2,3]=I23_tra
fm_tra[2,4]=I24_tra
fm_tra[2,5]=I25_tra
fm_tra[3,4]=I34_tra
fm_tra[3,5]=I35_tra
fm_tra[4,5]=I45_tra
for(i in 1:5){
for(j in 1:5){
fm_tra[j,i]=fm_tra[i,j]
}
}
fminv_tra=solve(fm_tra)
sc[bbb]=t(score_tra)%*%fminv_tra[3:5,3:5]%*%score_tra
}
}
# proc.time()-ptm
# # calculate power (interaction)
#
# if(length(which(is.na(smax)))==0 & length(which(is.na(sc)))==0){
#
#   power.smax=length(which(smax>=scv))/itertem
#   power.sc=length(which(sc>=qchisq(1-alpha,1)))/itertem
#
#
# }else{
#
#   power.smax=length(which(smax[-which(is.na(smax))]>=scv))/length(smax[-which(is.na(smax))])
#   power.sc=length(which(sc[-which(is.na(sc))]>=qchisq(1-alpha,1)))/length(sc[-which(is.na(sc))])
#
# }
# calculate power (global)
if(length(which(is.na(smax)))==0 & length(which(is.na(sc)))==0){
power.smax=length(which(smax>=scv))/itertem
power.sc=length(which(sc>=qchisq(1-alpha,3)))/itertem
}else{
power.smax=length(which(smax[-which(is.na(smax))]>=scv))/length(smax[-which(is.na(smax))])
power.sc=length(which(sc[-which(is.na(sc))]>=qchisq(1-alpha,3)))/length(sc[-which(is.na(sc))])
}
result[1,hh]=power.smax
result[2,hh]=power.sc
}
proc.time()-ptm
View(result)
library(xlsx)
?read.xlsx
read.xlsx("C:\Users\o0\Desktop\ordinal data\simulation\Combi_ordinal\result\result_5_4.xlsx",1)
read.xlsx("C:/Users/o0/Desktop/ordinal data/simulation/Combi_ordinal/result/result_5_4.xlsx",1)
re<-read.xlsx("C:/Users/o0/Desktop/ordinal data/simulation/Combi_ordinal/result/result_5_4.xlsx",1)
data<-read.xlsx("C:/Users/o0/Desktop/ordinal data/simulation/Combi_ordinal/result/result_5_4.xlsx",1)
data[3,3]
data[4,3]
data[4:14,3:7]
re=data[4:14,3:7]
apply(re,1,function(x){paste(collapse = " & ",x)})
?write.table
write.table(re, file = "f.txt", sep = "&", row.names=FALSE, col.names=FALSE,quote = TRUE)
setwd("C:/Users/o0/Desktop/ordinal data/simulation/Combi_ordinal/result/")
data<-read.xlsx("result_5_4.xlsx",1)
re=data[4:14,3:7]
apply(re,1,function(x){paste(collapse = " & ",x)})
write.table(re, file = "f.txt", sep = "&", row.names=FALSE, col.names=FALSE,quote = TRUE)
write.table(re, file = "f.txt", sep = "&", row.names=FALSE, col.names=FALSE,quote = F)
c(-4:4)
paste(collapse = " , ",c(-4,4))
paste(collapse = " , ",c(-4:4))
paste(collapse = " , ",eta2)
eta0 = rep(0,10)
eta1 = 0.2 * (-4:5)
eta2= c(-.65,-.54,-.3, .18, .20, .22, .24,.34,.36,.45)
eta3 = 0.1 * c(-2,0,2,0,-2,-2,0,2,0,-2)
paste(collapse = " , ",eta1)
paste(collapse = " , ",eta2)
paste(collapse = " , ",eta3)
alphax = c(-2:3)
c(-2:3)
0.2 * (-3:4)
0.2 * (-3:3)
c(-.3, .18, .20, .22, .24,.34,.45)
0.1 * c(0,2,0,-2,-2,0,2)
alphay = c(-1, 0, 1)
betay = -.5
alphax = c(-2:3)
betax = 1
eta0 = rep(0,7)
eta1 = 0.2 * (-3:3)
eta2= c(-.3, .18, .20, .22, .24,.34,.45)
eta3 = 0.1 * c(0,2,0,-2,-2,0,2)
paste(collapse = " , ",alphax)
paste(collapse = " , ",eat0)
eta0 = rep(0,7)
eta1 = 0.2 * (-3:3)
eta2= c(-.3, .18, .20, .22, .24,.34,.45)
eta3 = 0.1 * c(0,2,0,-2,-2,0,2)
paste(collapse = " , ",eat0)
paste(collapse = " , ",eta0)
paste(collapse = " , ",eta1)
paste(collapse = " , ",eta2)
paste(collapse = " , ",eta3)
